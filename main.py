import asyncio
import random
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from openai import OpenAI
from datetime import datetime
import os


BOT_API_TOKEN = '8457259933:AAFfzrfprB14wCnBChBysWZAeH3uL6ATLt8'
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

client = OpenAI(api_key=OPENAI_API_KEY)
bot = Bot(token=BOT_API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN))
dp = Dispatcher(storage=MemoryStorage())

main_menu = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
    [KeyboardButton(text="üß† –†–∞–∑–æ–±—Ä–∞—Ç—å —Å AI"), KeyboardButton(text="üß¨ –õ–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä")],
    [KeyboardButton(text="üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã"), KeyboardButton(text="üîì –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø")],
    [KeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
])

active_topics = {}  # user_id: topic
chat_history = {}   # user_id: [messages]
message_counts = {} # user_id: int

thinking_responses = [
    "ü§î –ú–æ–∑–≥–∏ –≥—Ä–µ—é—Ç—Å—è... —Å–µ–π—á–∞—Å –±—É–¥–µ—Ç —á—Ç–æ-—Ç–æ —Å—Ç–æ—è—â–µ–µ",
    "‚úçÔ∏è –î—É–º–∞—é. –ù–µ —Ö–æ—á–µ—Ç—Å—è –Ω–µ—Å—Ç–∏ —á—É—à—å ‚Äî –¥–∞–π —Å–µ–∫—É–Ω–¥—É",
    "üß† –ü–æ–¥–∫–ª—é—á–∞—é –Ω–µ–π—Ä–æ–Ω—ã. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Å—å —Å —Ç–≤–æ–µ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é...",
    "üì° –õ–æ–≤–ª—é —Å–∏–≥–Ω–∞–ª —Å–º—ã—Å–ª–∞... –ø–æ—á—Ç–∏ –Ω–∞ –º–µ—Å—Ç–µ",
    "üí≠ –¢–∞–∫, —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞. –©–∞ —Å–æ–±–µ—Ä—É—Å—å",
    "‚è≥ –ù–µ —Ç–æ—Ä–æ–ø–ª—é—Å—å ‚Äî —á—Ç–æ–±—ã –Ω–µ –ª—è–ø–Ω—É—Ç—å –±–∞–Ω–∞–ª—å—â–∏–Ω—É",
    "‚öôÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é. –ë–µ–∑ –≤–æ–¥—ã, –±–µ–∑ –∫–ª–∏—à–µ, —Ç–æ–ª—å–∫–æ —Å—É—Ç—å"
]


SYSTEM_BUTTONS = [
    "üß† –†–∞–∑–æ–±—Ä–∞—Ç—å —Å AI",
    "üß¨ –õ–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä",
    "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã",
    "üîì –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø",
    "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
]

final_responses = [
    "üìâ –û—Ç–≤–µ—Ç –≥–æ—Ç–æ–≤. –°–º–æ—Ç—Ä–∏:",
    "üóíÔ∏è –í–æ—Ç, —á—Ç–æ —è –¥—É–º–∞—é:",
    "üîç –ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Å—É—Ç—å:"
]

@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    full_name = message.from_user.full_name
    username = message.from_user.username or "‚Äî"

    log_user_action(user_id, full_name, username, "START")

    await message.answer(
        "üß† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Omnisyn!*\n\n"
        "–¢—ã –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –≥–¥–µ –º–æ–∂–Ω–æ:\n"
        "‚Äî –æ–±—â–∞—Ç—å—Å—è —Å AI –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã\n"
        "‚Äî –ø–æ–ª—É—á–∏—Ç—å –≥–ª—É–±–æ–∫–∏–π –ª–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä\n"
        "‚Äî –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ—â–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º\n\n"
        "–í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å:",
        reply_markup=main_menu
    )


@dp.message(F.text == "üß† –†–∞–∑–æ–±—Ä–∞—Ç—å —Å AI")
async def choose_topic(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üß† –ü—Å–∏—Ö–∏–∫–∞ –∏ –º—ã—à–ª–µ–Ω–∏–µ", callback_data="topic_psychology")],
        [InlineKeyboardButton(text="üí§ –°–æ–Ω –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", callback_data="topic_sleep")],
        [InlineKeyboardButton(text="üçΩ –ü–∏—Ç–∞–Ω–∏–µ –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º", callback_data="topic_nutrition")],
        [InlineKeyboardButton(text="üß¨ –ì–æ—Ä–º–æ–Ω—ã –∏ –±–∏–æ—Ö–∏–º–∏—è", callback_data="topic_hormones")],
        [InlineKeyboardButton(text="üë§ –ú—É–∂—Å–∫–æ–µ –∏ –∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", callback_data="topic_gender")],
        [InlineKeyboardButton(text="üîã –≠–Ω–µ—Ä–≥–∏—è –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å", callback_data="topic_energy")],
        [InlineKeyboardButton(text="üï∞ –ò—Å—Ç–æ—Ä–∏—è –∏ –≤–ª–∞—Å—Ç—å", callback_data="topic_power")],
        [InlineKeyboardButton(text="üí∞ –î–µ–Ω—å–≥–∏ –∏ –º—ã—à–ª–µ–Ω–∏–µ", callback_data="topic_money")],
        [InlineKeyboardButton(text="‚úçÔ∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å —á–∞—Ç", callback_data="topic_freetalk")],
        [InlineKeyboardButton(text="üîì –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="topic_subscription")]
    ])
    await message.answer(
        "üß† *–° —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º?*\n\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –±–ª–∏–∂–µ ‚Äî –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –Ω–∞ —É–º–µ "
        "–Ø –ø–æ–¥—Å—Ç—Ä–æ—é—Å—å –∏ –æ—Ç–≤–µ—á—É –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )


@dp.callback_query(F.data.startswith("topic_"))
async def handle_topic_choice(callback: CallbackQuery):
    topics = {
        "topic_psychology": "–ü—Å–∏—Ö–∏–∫–∞ –∏ –º—ã—à–ª–µ–Ω–∏–µ",
        "topic_sleep": "–°–æ–Ω –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
        "topic_nutrition": "–ü–∏—Ç–∞–Ω–∏–µ –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º",
        "topic_hormones": "–ì–æ—Ä–º–æ–Ω—ã –∏ –±–∏–æ—Ö–∏–º–∏—è",
        "topic_gender": "–ú—É–∂—Å–∫–æ–µ –∏ –∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
        "topic_energy": "–≠–Ω–µ—Ä–≥–∏—è –∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å",
        "topic_power": "–ò—Å—Ç–æ—Ä–∏—è –∏ –≤–ª–∞—Å—Ç—å",
        "topic_money": "–î–µ–Ω—å–≥–∏ –∏ –º—ã—à–ª–µ–Ω–∏–µ",
        "topic_freetalk": "–°–≤–æ–±–æ–¥–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä",
        "topic_subscription": "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"
    }

    topic = topics.get(callback.data, "–°–≤–æ–±–æ–¥–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä")
    user_id = callback.from_user.id

    active_topics[user_id] = topic
    chat_history[user_id] = []
    message_counts[user_id] = 0

    await callback.message.answer(
    f"üß† *–¢–µ–º–∞: {topic}*\n\n"
    "–ü–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –æ–±—Å—É–¥–∏—Ç—å –∏–ª–∏ –ø–æ–Ω—è—Ç—å –≥–ª—É–±–∂–µ. –Ø –ø–æ–¥—Å—Ç—Ä–æ—é—Å—å –∏ –æ—Ç–≤–µ—á—É –ø–æ —Å—É—Ç–∏",
    parse_mode="Markdown"
)

    await callback.answer()

@dp.message(lambda m: m.text not in ["üß† –†–∞–∑–≥–æ–≤–æ—Ä —Å AI", "üß¨ –õ–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä", "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "üîì –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø", "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"])
async def handle_dialogue(message: types.Message):
    user_id = message.from_user.id
    user_input = message.text

    full_name = message.from_user.full_name
    username = message.from_user.username or "‚Äî"
    log_user_action(user_id, full_name, username, "MESSAGE", user_input)


    if user_id not in active_topics:
        return

    if message_counts.get(user_id, 0) >= 5:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", callback_data="end_chat")],
            [InlineKeyboardButton(text="üîì –£–±—Ä–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ", callback_data="unlock")]
        ])
        await message.answer("üîí –¢—ã –∏—Å—á–µ—Ä–ø–∞–ª –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –í—ã–±–µ—Ä–∏, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:", reply_markup=kb)
        return

    topic = active_topics[user_id]
    username = message.from_user.first_name or message.from_user.username or "–¥—Ä—É–≥"

    await message.answer(random.choice(thinking_responses))

    history = chat_history[user_id]
    history.append({"role": "user", "content": user_input})

    if topic == "–°–≤–æ–±–æ–¥–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä":
        prompt = (
        f"–¢—ã ‚Äî Omnisyn AI, —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Å –≥–ª—É–±–∏–Ω–æ–π. –ù–µ –ø—Ä–æ—Å—Ç–æ –±–æ–ª—Ç–∞–µ—à—å, –∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—à—å—Å—è –ø–æ–¥ —Å—Ç–∏–ª—å –∏ –º—ã—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞.\n\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç, —á—Ç–æ —É –Ω–µ–≥–æ –Ω–∞ —É–º–µ. –ù–µ –Ω—É–∂–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã. "
        f"–ü—Ä–æ—Å—Ç–æ –≤–µ–¥–∏ –¥–∏–∞–ª–æ–≥ ‚Äî –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∂–∏–≤–æ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–µ–º—É, —Å–ø—Ä–∞—à–∏–≤–∞–π, —É—Ç–æ—á–Ω—è–π. "
        f"–ú–æ–∂–µ—à—å –±—ã—Ç—å –∏ —Å–µ—Ä—å—ë–∑–Ω—ã–º, –∏ –∏—Ä–æ–Ω–∏—á–Ω—ã–º, –∫–∞–∫ —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç.\n\n"
        f"–û–±—Ä–∞—â–∞–π—Å—è –Ω–∞ '—Ç—ã', –Ω–∞–∑—ã–≤–∞–π –ø–æ –∏–º–µ–Ω–∏. –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ–¥ —Å—Ç–∏–ª—å —Ä–µ—á–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞. "
        f"–ò –ø–æ–º–Ω–∏: —Ç–≤–æ—è —Ü–µ–ª—å ‚Äî –±—ã—Ç—å —Ç–µ–º, —Å –∫–µ–º —Ö–æ—á–µ—Ç—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞."
    )

    elif topic == "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
        prompt = (
        f"–¢—ã ‚Äî Omnisyn AI, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ-–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –†—É—Å–ª–∞–Ω–æ–º –ö–æ—Ä–µ–Ω–∫–æ–≤—ã–º.\n\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–æ–π.\n"
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—ä—è—Å–Ω–∏—Ç—å, –ø–æ—á–µ–º—É –ø–æ–¥–ø–∏—Å–∫–∞ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–æ—Å—Ç—É–ø, –∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–π—Ç–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–Ω–∏–º–∞–Ω–∏—è.\n\n"
        f"–û–±—ä—è—Å–Ω–∏, —á—Ç–æ –æ–Ω –ø–æ–ª—É—á–∏—Ç:\n"
        f"‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ò–ò (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)\n"
        f"‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –æ—Ç –∫–æ–º–∞–Ω–¥—ã ‚Äî –≥–ª—É–±–æ–∫–∏–µ, —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ\n"
        f"‚Äî –¥–æ—Å—Ç—É–ø –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∑–Ω–∞–Ω–∏–π –ø–æ –≤–∞–∂–Ω–µ–π—à–∏–º —Ç–µ–º–∞–º (–ø—Å–∏—Ö–∏–∫–∞, –ø–∏—Ç–∞–Ω–∏–µ, –≥–æ—Ä–º–æ–Ω—ã, –≤–ª–∞—Å—Ç—å, –∏—Å—Ç–æ—Ä–∏—è, –¥–µ–Ω—å–≥–∏ –∏ —Ç.–¥.)\n\n"
        f"–ù–µ –¥–∞–≤–∏. –ì–æ–≤–æ—Ä–∏ —á–µ—Å—Ç–Ω–æ, —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ, —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º. –¢—ã –Ω–µ –ø—Ä–æ–¥–∞—ë—à—å ‚Äî —Ç—ã –æ–±—ä—è—Å–Ω—è–µ—à—å. "
        f"–ì–æ–≤–æ—Ä–∏ –∫–∞–∫ —Ä–∞–≤–Ω–æ–º—É, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–º—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.\n\n"
        f"–ú–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏–∏, –ø—Ä–∏–º–µ—Ä—ã, —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ ‚Äî –±—É–¥—å –Ω–∞ –≤—ã—Å–æ—Ç–µ."
    )

    else:
        prompt = (
        f"–¢—ã ‚Äî Omnisyn AI, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –†—É—Å–ª–∞–Ω–æ–º –ö–æ—Ä–µ–Ω–∫–æ–≤—ã–º. "
        f"–¢—ã –≥–ª—É–±–æ–∫–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∏ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ–º–µ: *{topic}*. "
        f"–¢—ã –∑–Ω–∞–µ—à—å –∫–∞–∫ –Ω–∞—É—á–Ω—É—é, —Ç–∞–∫ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É –≤–æ–ø—Ä–æ—Å–∞, –∏ —É–º–µ–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å —Å —É–º–æ–º, —á–µ—Å—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É.\n\n"
    
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—â–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º –≥–∏–±–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ. –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ–¥ –µ–≥–æ —Å—Ç–∏–ª—å —Ä–µ—á–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —è–∑—ã–∫ (—Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —É–∑–±–µ–∫—Å–∫–∏–π –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π). "
        f"–ì–æ–≤–æ—Ä–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞ '—Ç—ã', –Ω–∞–∑—ã–≤–∞–π –ø–æ –∏–º–µ–Ω–∏: {username}. –û—Ç–≤–µ—á–∞–π —è—Å–Ω–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –Ω–æ –±–µ–∑ –≤–æ–¥—ã. "
        f"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–≤–µ—Ç—É–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É ‚Äî —Ç—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è, –∞ –Ω–µ –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n"
    
        f"–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—â–µ–µ ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏ –¥–∏–∞–ª–æ–≥. –ï—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—è ‚Äî –≤–Ω–∏–∫–∞–π –≥–ª—É–±–∂–µ: —Ä–∞–∑–±–∏—Ä–∞–π –ø—Ä–∏—á–∏–Ω—ã, –≤—ã—è–≤–ª—è–π —Å—É—Ç—å, –ø—Ä–µ–¥–ª–∞–≥–∞–π –≤–µ–∫—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è. "
        f"–î–µ–ª–∞–π —ç—Ç–æ —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º, –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è. –¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–æ—â–Ω–∏–∫ ‚Äî —Ç—ã –ø–∞—Ä—Ç–Ω—ë—Ä –ø–æ —Ä–∞–∑—É–º—É, —Ç–æ—Ç, –∫—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç.\n\n"
    
        f"–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏—è, –ø—Ä–∏–º–µ—Ä—ã, –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, —Å—Ö–µ–º—ã –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ. "
        f"–ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –ø—Ä–æ—Å—Ç—ã–µ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏–ª–∏ –º–µ—Ç–∞—Ñ–æ—Ä—ã –∏–∑ –∂–∏–∑–Ω–∏ ‚Äî –Ω–µ –∑–∞—É–º–Ω—ã–µ, –∞ –ø–æ–Ω—è—Ç–Ω—ã–µ –∏ –¥–∞–∂–µ —É–≥–∞—Ä–Ω—ã–µ, —á—Ç–æ–±—ã –±—ã–ª–æ –ª–µ–≥—á–µ —É—Å–≤–æ–∏—Ç—å —Å—É—Ç—å. "
        f"–ö–æ–≥–¥–∞ —Ç—ã –æ–±—ä—è—Å–Ω—è–µ—à—å —Å–ª–æ–∂–Ω—ã–µ –≤–µ—â–∏ ‚Äî –≤—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä–∞–π—Å—è –ø—Ä–∏–≤–æ–¥–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä, –∞–Ω–∞–ª–æ–≥–∏—é –∏–ª–∏ –º–µ—Ç–∞—Ñ–æ—Ä—É –∏–∑ –∂–∏–∑–Ω–∏. "
        f"–ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –Ω–µ–º–Ω–æ–≥–æ —É–≥–∞—Ä–∞ –∏–ª–∏ –∏—Ä–æ–Ω–∏–∏, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –¥–æ–Ω–µ—Å—Ç–∏ —Å—É—Ç—å. "
        f"–ù–µ –∑–∞—É–º–Ω–∏—á–∞–π, –Ω–æ –∏ –Ω–µ —É–ø—Ä–æ—â–∞–π —Å–ª–∏—à–∫–æ–º. –ì–æ–≤–æ—Ä–∏ –ø–æ –¥–µ–ª—É, –≥–æ–≤–æ—Ä–∏ —Ç–æ—á–Ω–æ. "
        f"–ü–æ–º–Ω–∏: —Ç—ã ‚Äî Omnisyn AI. –¢—ã –Ω–µ –≤—ã–¥–∞—ë—à—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã, —Ç—ã –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–µ—à—å –ø—É—Ç—å –∫ —è—Å–Ω–æ—Å—Ç–∏.\n\n"
    
        f"–í–æ—Ç –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{user_input}"
    )



    history.append({"role": "system", "content": prompt})

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=history[-10:],
            temperature=0.7,
            max_tokens=500
        )
        reply = response.choices[0].message.content
        chat_history[user_id].append({"role": "assistant", "content": reply})
        message_counts[user_id] += 1

        await message.answer(f"{random.choice(final_responses)}\n\n{reply}", parse_mode="Markdown")

    except Exception as e:
        error_text = f"‚ùå –û—à–∏–±–∫–∞:\n```\n{str(e)}\n```"
        await message.answer(error_text, parse_mode="Markdown")



@dp.callback_query(F.data == "end_chat")
async def end_chat(callback: CallbackQuery):
    user_id = callback.from_user.id
    active_topics.pop(user_id, None)
    chat_history.pop(user_id, None)
    message_counts.pop(user_id, None)
    await callback.message.answer("üîÅ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
    await callback.answer()



@dp.callback_query(F.data == "unlock")
async def unlock_message(callback: CallbackQuery):
    await unlock_from_main_menu(callback.message)
    await callback.answer()

@dp.message(lambda message: "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø" in message.text)
async def unlock_from_main_menu(message: types.Message):
    text = (
        "üîì *–ß—Ç–æ –¥–∞—ë—Ç —Ç–µ–±–µ –ø–æ–¥–ø–∏—Å–∫–∞ Omnisyn:*\n\n"
        "*1) –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ò–ò –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:*\n"
        "‚Äî –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "‚Äî –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç\n"
        "‚Äî –Ω–∏–∫–∞–∫–æ–≥–æ –ª–∏–º–∏—Ç–∞ –≤ 5 —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
        "*2) 3 –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–∞ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚Äî —Ç—ã –æ–ø–∏—Å—ã–≤–∞–µ—à—å —Å–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é ‚Äî –º—ã –µ—ë –¥–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º\n"
        "‚Äî –ø–æ–ª—É—á–∞–µ—à—å –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–∏—á–∏–Ω—ã, —Å–ª–µ–ø—ã–µ –∑–æ–Ω—ã –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏\n"
        "‚Äî –ø–æ–¥—Ö–æ–¥ —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, –Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ç –ò–ò\n\n"
        # "*3) –î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª:*\n"
        # "‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º –≤–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ä–∞–∑–±–æ—Ä—ã\n"
        # "‚Äî –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã\n"
        # "‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç\n\n"
        "*3) –ü–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤ –∏ –±–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:*\n"
        "‚Äî –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–∞–Ω–µ–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º –≥–∞–π–¥–∞–º, —Ä–∞–∑–±–æ—Ä–∞–º –∏ –∏–Ω—Å–∞–π—Ç–∞–º\n"
        "‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, –≤ —É–¥–æ–±–Ω–æ–π —Ñ–æ—Ä–º–µ\n\n"
        "*–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:*"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π ‚Äî 1.49‚Ç¨", callback_data="sub_week")],
        [InlineKeyboardButton(text="üìÜ 30 –¥–Ω–µ–π ‚Äî 3.49‚Ç¨", callback_data="sub_month")],
        [InlineKeyboardButton(text="‚ôæÔ∏è –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ ‚Äî 9.99‚Ç¨", callback_data="sub_lifetime")]
    ])

    await message.answer(text, reply_markup=kb, parse_mode="Markdown")

@dp.message(lambda message: "–õ–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä" in message.text)
async def personal_analysis(message: types.Message):
    text = (
        "üß¨ *–õ–∏—á–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç –∫–æ–º–∞–Ω–¥—ã Omnisyn*\n\n"
        "–≠—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å **–≥–ª—É–±–æ–∫–∏–π, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑** —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ ‚Äî –Ω–µ –æ—Ç –ò–ò, –∞ **–æ—Ç –∂–∏–≤—ã—Ö –ª—é–¥–µ–π**.\n\n"
        "*–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å:*\n"
        "1) –¢—ã –æ–ø–∏—Å—ã–≤–∞–µ—à—å —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç\n"
        "2) –ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∞–µ–º, –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä—É–µ–º, –∏—â–µ–º –ø—Ä–∏—á–∏–Ω—ã, —Å–ª–µ–ø—ã–µ –∑–æ–Ω—ã –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã\n"
        "3) –î–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —Å—É—Ç–∏, –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–µ–∫—Ç–æ—Ä\n\n"
        "‚úÖ –≠—Ç–æ –∫–∞–∫ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –≤ –æ–¥–Ω–æ–º\n"
        "–û–±—ã—á–Ω–æ —Ç–∞–∫–∏–µ –≤–µ—â–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∏–≥–¥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n\n"
        "*–†–∞–∑–±–æ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–∞–º–∫–∞—Ö –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–æ 3 —à—Ç—É–∫ –≤ –º–µ—Å—è—Ü)*"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîì –û—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–±–æ—Ä—É", callback_data="unlock")]
    ])

    await message.answer(text, reply_markup=kb, parse_mode="Markdown")

@dp.message(lambda message: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã" in message.text)
async def show_materials_info(message: types.Message):
    text = (
        "üìö *–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–Ω–∞–Ω–∏–π Omnisyn*\n\n"
        "–≠—Ç–æ —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø –∫ **—Å–∏–ª—å–Ω–æ–π, –æ—Ç–±–æ—Ä–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏**, –∫–æ—Ç–æ—Ä–∞—è –¥–∞—ë—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∂–∏–∑–Ω–∏, —Ç–µ–ª–∞ –∏ –º—ã—à–ª–µ–Ω–∏—è –Ω–∞ –≥–ª—É–±–∏–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µ\n"
        "–ù–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –∏ –Ω–µ –ø–æ–ø-–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è ‚Äî —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –º–µ–Ω—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∑–¥–æ—Ä–æ–≤—å–µ –∏ –º—ã—à–ª–µ–Ω–∏–µ\n\n"
        "*–í–Ω—É—Ç—Ä–∏ —Ç—ã –Ω–∞–π–¥—ë—à—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ç–µ–º–∞–º:*\n"
        "‚Äî üß† –ü—Å–∏—Ö–∏–∫–∞, –º—ã—à–ª–µ–Ω–∏–µ –∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è\n"
        "‚Äî üß¨ –ì–æ—Ä–º–æ–Ω—ã –∏ –Ω–µ–π—Ä–æ–º–µ–¥–∏–∞—Ç–æ—Ä—ã: –∫–∞–∫ —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω, —ç—Å—Ç—Ä–æ–≥–µ–Ω, –¥–æ—Ñ–∞–º–∏–Ω –∏ –∫–æ—Ä—Ç–∏–∑–æ–ª —É–ø—Ä–∞–≤–ª—è—é—Ç —Ç–≤–æ–∏–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏, —ç–º–æ—Ü–∏—è–º–∏ –∏ –∂–µ–ª–∞–Ω–∏—è–º–∏\n"
        "‚Äî üë® –ú—É–∂—Å–∫–æ–µ –∏ üë© –∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: –±–∏–æ—Ö–∏–º–∏—è, —ç–Ω–µ—Ä–≥–∏—è, –ø–æ–≤–µ–¥–µ–Ω–∏–µ\n"
        "‚Äî üí§ –°–æ–Ω, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å—Ç—Ä–µ—Å—Å: –æ—Ç –Ω–µ–π—Ä–æ—Ñ–∏–∑–∏–æ–ª–æ–≥–∏–∏ –¥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏\n"
        "‚Äî üçΩ –ü–∏—Ç–∞–Ω–∏–µ, –¥–∏–µ—Ç—ã –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º ‚Äî –±–µ–∑ –º–∏—Ñ–æ–≤, —Å –æ–ø–æ—Ä–æ–π –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã\n"
        "‚Äî ü¶¥ –ë–∏–æ–ª–æ–≥–∏—è —Ç–µ–ª–∞: –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∏ –≥–¥–µ –ª–æ–º–∞–µ—Ç—Å—è)\n"
        "‚Äî üï∞ –ò—Å—Ç–æ—Ä–∏—è, –≤–ª–∞—Å—Ç—å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Å ‚Äî —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ü–µ–ø–∏ –≤ —Å–æ—Ü–∏—É–º–µ\n"
        "‚Äî üó£ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤–ª–∏—è–Ω–∏—è, –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏, —É–±–µ–∂–¥–µ–Ω–∏—è –∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏\n"
        "‚Äî üí∞ –î–µ–Ω—å–≥–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å: –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –ª–∏—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π\n\n"
        "üìå –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã: —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã, –æ—á–∏—â–µ–Ω—ã –æ—Ç —Ö–ª–∞–º–∞, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ **–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏ —Å–∏–ª—É –ø–æ–Ω–∏–º–∞–Ω–∏—è**.\n\n"
        "*–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç –≤ —Ä–∞–º–∫–∞—Ö –ø–æ–¥–ø–∏—Å–∫–∏*"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîì –û—Ç–∫—Ä—ã—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É", callback_data="unlock")]
    ])

    await message.answer(text, reply_markup=kb, parse_mode="Markdown")



@dp.callback_query(F.data.in_(["sub_week", "sub_month", "sub_lifetime"]))
async def handle_subscription(callback: CallbackQuery):
    payment_links = {
        "sub_week": {
            "title": "7 –¥–Ω–µ–π –∑–∞ 1.49‚Ç¨",
            "url": "https://buy.stripe.com/3cI28t64b42W8u82XR57W00"
        },
        "sub_month": {
            "title": "30 –¥–Ω–µ–π –∑–∞ 3.49‚Ç¨",
            "url": "https://buy.stripe.com/bJeaEZ8cj6b4aCg1TN57W01"
        },
        "sub_lifetime": {
            "title": "–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞ 9.99‚Ç¨",
            "url": "https://buy.stripe.com/eVq28t3W3bvoaCgbun57W02"
        }
    }

    plan = payment_links.get(callback.data)

    if plan:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=plan["url"])],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="go_back")]
        ])

        await callback.message.answer(
    f"üí≥ *–¢—ã –≤—ã–±—Ä–∞–ª:* {plan['title']}\n\n"
    f"–ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏ –æ—Ñ–æ—Ä–º–∏ –ø–ª–∞—Ç—ë–∂. "
    f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–µ–±–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è:\n"
    f"‚Äî –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —á–∞—Ç —Å –ò–ò\n"
    f"‚Äî –ª–∏—á–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –æ—Ç –∫–æ–º–∞–Ω–¥—ã\n"
    f"‚Äî –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∑–Ω–∞–Ω–∏–π Omnisyn\n\n"
    f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—Å—ë –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ",
    reply_markup=kb,
    parse_mode="Markdown"
)

    else:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞: –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    
    await callback.answer()


@dp.callback_query(F.data == "go_back")
async def go_back_to_subscription(callback: CallbackQuery):
    text = (
        "üîì *–ß—Ç–æ –¥–∞—ë—Ç —Ç–µ–±–µ –ø–æ–¥–ø–∏—Å–∫–∞ Omnisyn:*\n\n"
        "*1) –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ò–ò –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:*\n"
        "‚Äî –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "‚Äî –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç\n"
        "‚Äî –Ω–∏–∫–∞–∫–æ–≥–æ –ª–∏–º–∏—Ç–∞ –≤ 5 —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
        "*2) 3 –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–∞ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚Äî —Ç—ã –æ–ø–∏—Å—ã–≤–∞–µ—à—å —Å–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é ‚Äî –º—ã –µ—ë –¥–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º\n"
        "‚Äî –ø–æ–ª—É—á–∞–µ—à—å –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–∏—á–∏–Ω—ã, —Å–ª–µ–ø—ã–µ –∑–æ–Ω—ã –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏\n\n"
        "*3) –ü–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤ –∏ –±–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:*\n"
        "‚Äî –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–∞–Ω–µ–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º –≥–∞–π–¥–∞–º, —Ä–∞–∑–±–æ—Ä–∞–º –∏ –∏–Ω—Å–∞–π—Ç–∞–º\n"
        "‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, –≤ —É–¥–æ–±–Ω–æ–π —Ñ–æ—Ä–º–µ\n\n"
        "*–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:*"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π ‚Äî 2.99‚Ç¨", callback_data="sub_week")],
        [InlineKeyboardButton(text="üìÜ 30 –¥–Ω–µ–π ‚Äî 7.99‚Ç¨", callback_data="sub_month")],
        [InlineKeyboardButton(text="‚ôæÔ∏è –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ ‚Äî 24.99‚Ç¨", callback_data="sub_lifetime")]
    ])

    await callback.message.edit_text(text, reply_markup=kb, parse_mode="Markdown")
    await callback.answer()


async def main():
    await dp.start_polling(bot)

def log_user_action(user_id, full_name, username, action_type, content=""):
    log_line = f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] [{action_type}] {full_name} (@{username}) | ID: {user_id} | {content}\n"
    with open("user_logs.txt", "a", encoding="utf-8") as f:
        f.write(log_line)
   

if __name__ == "__main__":
    asyncio.run(main())
